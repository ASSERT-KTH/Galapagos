
static int ulaw_to_s16(unsigned char u_val)
{
	u_val = ~u_val;
	int t = (u_val & 0x0f) << 3;
	t += 0x84;
	t <<= (u_val & 0x70) >> 4;
	if (u_val & 0x80)
		return 0x84 - t;
	return t - 0x84;
}



static int ulaw_to_s16(unsigned char u_val)
{
	int sign = u_val & 0x80;
	u_val = ~u_val;
	int exponent = (u_val & 0x70) >> 4;
	int mantissa = u_val & 0x0f;
	int t = ((mantissa << 3) + 0x84) << exponent;
	return sign ? (0x84 - t) : (t - 0x84);
}



static int ulaw_to_s16(unsigned char u_val)
{
	u_val = ~u_val;
	int shift = (u_val & 0x70) >> 4;
	int base = ((u_val & 0x0f) << 3) + 0x84;
	base <<= shift;
	return (u_val & 0x80) ? (0x84 - base) : (base - 0x84);
}



static int ulaw_to_s16(unsigned char u_val)
{
	unsigned char inv_val = ~u_val;
	int t = (inv_val & 0x0f) << 3;
	t += 0x84;
	t <<= (inv_val & 0x70) >> 4;
	if (inv_val & 0x80)
		return 0x84 - t;
	return t - 0x84;
}



static int ulaw_to_s16(unsigned char u_val)
{
	int temp, result;
	u_val = ~u_val;
	temp = ((u_val & 0x0f) << 3) + 0x84;
	temp <<= (u_val & 0x70) >> 4;
	result = (u_val & 0x80) ? (0x84 - temp) : (temp - 0x84);
	return result;
}



static int ulaw_to_s16(unsigned char u_val)
{
	int t;
	u_val = ~u_val;
	int quantization_bits = (u_val & 0x0f) << 3;
	int segment_bits = (u_val & 0x70) >> 4;
	t = (quantization_bits + 0x84) << segment_bits;
	return (u_val & 0x80) ? (0x84 - t) : (t - 0x84);
}



static int ulaw_to_s16(unsigned char u_val)
{
	int t;
	u_val = ~u_val;
	int mantissa = (u_val & 0x0f) << 3;
	mantissa += 0x84;
	int exponent = (u_val & 0x70) >> 4;
	t = mantissa << exponent;
	return (u_val & 0x80) ? (0x84 - t) : (t - 0x84);
}



static int ulaw_to_s16(unsigned char u_val)
{
	u_val = ~u_val;
	int t = ((u_val & 0x0f) << 3) + 0x84;
	int exponent = (u_val & 0x70) >> 4;
	t <<= exponent;
	int result = ((u_val & 0x80) ? (0x84 - t) : (t - 0x84));
	return result;
}



static int ulaw_to_s16(unsigned char u_val)
{
	u_val = ~u_val;
	int t = ((u_val & 0x0f) << 3) + 0x84;
	int exp = (u_val & 0x70) >> 4;
	t <<= exp;
	return (u_val & 0x80) ? (0x84 - t) : (t - 0x84);
}



static int ulaw_to_s16(unsigned char u_val)
{
	int t;
	u_val = ~u_val;
	int q_bits = (u_val & 0x0f) << 3;
	int s_bits = (u_val & 0x70) >> 4;
	t = (q_bits + 0x84) << s_bits;
	return (u_val & 0x80) ? (0x84 - t) : (t - 0x84);
}
