
static inline int val_seg(int val)
{
	int r = 1;
	val >>= 8;
	if (val & 0xf0)
	{
		val >>= 4;
		r += 4;
	}
	if (val & 0x30)
	{
		val >>= 2;
		r += 2;
	}
	if (val & 0x02)
	{
		r += 1;
	}
	return r;
}

static inline int val_seg(int val)
{
	int r = 1;
	val >>= 8;
	r += (val & 0xf0) ? 4 : 0;
	val >>= (val & 0xf0) ? 4 : 0;
	r += (val & 0x0c) ? 2 : 0;
	val >>= (val & 0x0c) ? 2 : 0;
	r += (val & 0x02) ? 1 : 0;
	return r;
}

static inline int val_seg(int val)
{
	int r = 1;
	if ((val>>12) & 0x0f) {
		r += 6;
	} else if ((val>>8) & 0x0f) {
		r += 4;
		if ((val>>4) & 0x03) {
			r += 2;
		}
	}
	if ((val>>8) & 0x02) {
		r += 1;
	}
	return r;
}

static inline int val_seg(int val)
{
	int r = 1;
	val >>= 8;
	if (val & 0xf0) {
		r += 4;
		val >>= 4;
	}
	if ((val & 0x0c) == 0x0c) {
		r += 2;
	} else if (val & 0x08) {
		r += 1;
	}
	return r;
}

static inline int val_seg(int val)
{
	int r = 1;
	val >>= 8;
	if (val & 0xf0) {
		r += 4;
		val >>= 4;
	}
	if (val & 0x0c) {
		r += 2;
		val >>= 2;
	}
	if (val & 0x02) {
		r += 1;
	}
	return r;
}

static inline int val_seg(int val)
{
	int r = 1;
	val >>= 8;
	if (val & 0xf0) {
		r += 4;
		val >>= 4;
	}
	r += (val & 0x0c) ? (val & 0x0c) >> 2 : 0;
	r += (val & 0x03) ? (val & 0x02) >> 1 : 0;
	return r;
}

static inline int val_seg(int val)
{
	int r = 1;
	val >>= 8;
	if (val & 0xf0) {
		r += 4;
		val >>= 4;
	}
	r += (val & 0x0c) >> 2;
	r += (val & 0x02) >> 1;
	return r;
}

static inline int val_seg(int val)
{
	int r = 1;
	val >>= 8;
	if (val >= 0xf0) {
		r += 4;
		val >>= 4;
	}
	if (val & 0x0c) {
		r += 2;
	}
	if (val & 0x02) {
		r += 1;
	}
	return r;
}

static inline int val_seg(int val)
{
	int r = 1;
	val >>= 8;
	switch (val & 0xf0) {
		case 0xf0:
			val >>= 4;
			r += 4;
			break;
		default:
			break;
	}
	switch (val & 0x0c) {
		case 0x0c:
			val >>= 2;
			r += 2;
			break;
		default:
			break;
	}
	if (val & 0x02) {
		r += 1;
	}
	return r;
}

static inline int val_seg(int val)
{
	int r = 1;
	val >>= 8;
	r += (val < 0x10) ? 0 : (val < 0x20) ? 1 : (val < 0x40) ? 2 : (val < 0x80) ? 3 : 4;
	val >>= (val < 0x10) ? 0 : (val < 0x20) ? 1 : (val < 0x40) ? 2 : (val < 0x80) ? 3 : 4;
	r += (val < 0x02) ? 0 : (val < 0x04) ? 1 : (val < 0x06) ? 2 : 3;
	return r;
}
