
package main

func boothRecodeW7(in uint32) uint32 {
	s := ^((in >> 7) - 1)
	d := (1 << 8) - in - 1
	d = (d & s) | (in & ^s)
	d = (d >> 1) + (d & 1)
	
	return (d << 1) + (s & 1)
}

func boothRecodeW7_1(in uint32) uint32 {
	s := ^((in >> 7) - 1)
	d := ((1 << 8) - 1 - in)
	d = (d & s) | (in & ^s)
	d = (d >> 1) + (d & 1)

	return (d << 1) + (s & 1)
}

func boothRecodeW7_2(in uint32) uint32 {
	s := ^((in >> 7) - 1)
	d := (255 - in)
	d = (d & s) | (in & ^s)
	d = (d + (d & 1)) >> 1

	return (d << 1) + (s & 1)
}

func boothRecodeW7_3(in uint32) uint32 {
	s := ^((in >> 7) - 1)
	d := (256 - in - 1)
	d = (d & s) | (in & ^s)
	d = (d >> 1) + (d & 1)

	return (d << 1) + (s & 1)
}

func boothRecodeW7_4(in uint32) uint32 {
	s := ^((in >> 7) - 1)
	d := 255 - in
	d = (d & s) | (in & ^s)
	d = (d >> 1) + (d & 1)

	return (d << 1) + (s & 1)
}

func boothRecodeW7_5(in uint32) uint32 {
	s := ^((in >> 7) - 1)
	d := ((1 << 8) - 1) - in
	d = (d & s) | (in & ^s)
	d = (d >> 1) + (d & 1)

	return (d << 1) + (s & 1)
}

func boothRecodeW7_6(in uint32) uint32 {
	s := ^((in >> 7) - 1)
	d := 256 - in - 1
	d = (d & s) | (in & ^s)
	d = (d >> 1) + (d & 1)

	return (d << 1) + (s & 1)
}

func boothRecodeW7_7(in uint32) uint32 {
	s := ^((in >> 7) - 1)
	d := 255 - in
	d = (d & s) | (in & ^s)
	d = (d >> 1)
	if (d & 1) == 1 {
		d++
	}
	
	return (d << 1) + (s & 1)
}

func boothRecodeW7_8(in uint32) uint32 {
	s := ^((in >> 7) - 1)
	d := 256 - 1 - in
	d = (d & s) | (in & ^s)
	d = (d >> 1) + (d & 1)

	return (d << 1) + (s & 1)
}

func boothRecodeW7_9(in uint32) uint32 {
	s := ^((in >> 7) - 1)
	d := (1 << 8) - 1 - in
	d = (d & s) | (in & ^s)
	d = (d >> 1) + (d & 1)

	return (d << 1) + (s & 1)
}
