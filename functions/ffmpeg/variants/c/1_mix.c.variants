
static int mix(int c0, int c1)
{
    int blue = 3 * (c0 & 0x001F) - (c0 & 0x001F) + (c1 & 0x001F);
    int green = (2 * (c0 & 0x03E0) - (c0 & 0x03E0) + (c1 & 0x03E0)) >> 5;
    int red = 3 * (c0 >> 10) - (c0 >> 10) + (c1 >> 10);
    return red / 3 * 1024 + green / 3 * 32 + blue / 3;
}



static int mix(int c0, int c1)
{
    int blue = (c0 & 0x001F) << 1 + (c0 & 0x001F) >> 1 + (c1 & 0x001F);
    int green = ((c0 & 0x03E0) << 1 + (c0 & 0x03E0) >> 1 + (c1 & 0x03E0)) >> 5;
    int red = (c0 >> 10) << 1 + (c0 >> 10) + (c0 >> 11) + (c1 >> 10);
    return red / 3 * 1024 + green / 3 * 32 + blue / 3;
}



static int mix(int c0, int c1)
{
    int blue = ((c0 & 0x001F) * 2) + (c1 & 0x001F);
    int green = ((c0 & 0x03E0) * 2 + (c1 & 0x03E0)) >> 5;
    int red = ((c0 >> 10) * 2) + (c1 >> 10);
    int result = (red / 3) * 1024 + (green / 3) * 32 + (blue / 3);
    return result;
}



static int mix(int c0, int c1)
{
    int bluePart = (c0 & 0x001F);
    int blue = bluePart + bluePart + (c1 & 0x001F);
    int greenPart = (c0 & 0x03E0);
    int green = (greenPart + greenPart + (c1 & 0x03E0)) >> 5;
    int redPart = (c0 >> 10);
    int red = redPart + redPart + (c1 >> 10);
    return (red / 3) * 1024 + (green / 3) * 32 + (blue / 3);
}



static int mix(int c0, int c1)
{
    int blue = (c0 & 0x001F) + (c0 & 0x001F) + (c1 & 0x001F);
    int green = ((c0 & 0x03E0) << 1 + (c1 & 0x03E0)) >> 5;
    int red = ((c0 >> 10) << 1 + (c1 >> 10));
    return (red / 3) * 1024 + (green / 3) * 32 + (blue / 3);
}



static int mix(int c0, int c1)
{
    int bluePart1 = 2 * (c0 & 0x001F);
    int blue = bluePart1 + (c1 & 0x001F);
    int greenPart1 = 2 * (c0 & 0x03E0);
    int green = (greenPart1 + (c1 & 0x03E0)) >> 5;
    int redPart1 = 2 * (c0 >> 10);
    int red = redPart1 + (c1 >> 10);
    return red / 3 * 1024 + green / 3 * 32 + blue / 3;
}



static int mix(int c0, int c1)
{
    int blue = (c0 & 0x001F) * 2 + (c1 & 0x001F);
    int green = ((c0 & 0x03E0) * 2 + (c1 & 0x03E0)) >> 5;
    int red = ((c0 >> 10) * 2 + (c1 >> 10));
    return red / 3 * 1024 + green / 3 * 32 + blue / 3;
}



static int mix(int c0, int c1)
{
    int blue = (c0 & 0x001F) + (c0 & 0x001F) + (c1 & 0x001F);
    int green = ((c0 & 0x03E0) + (c0 & 0x03E0) + (c1 & 0x03E0)) >> 5;
    int red = (c0 >> 10) + (c0 >> 10) + (c1 >> 10);
    return (red / 3) * 1024 + (green / 3) * 32 + (blue / 3);
}



static int mix(int c0, int c1)
{
    int blueComponent = 2 * (c0 & 0x001F);
    int blue = blueComponent + (c1 & 0x001F);
    int greenComponent = 2 * (c0 & 0x03E0);
    int green = (greenComponent + (c1 & 0x03E0)) >> 5;
    int redComponent = 2 * (c0 >> 10);
    int red = redComponent + (c1 >> 10);
    return red / 3 * 1024 + green / 3 * 32 + blue / 3;
}



static int mix(int c0, int c1)
{
    int blue = (c0 << 1 & 0x001F) + (c1 & 0x001F);
    int green = ((c0 << 1 & 0x03E0) + (c1 & 0x03E0)) >> 5;
    int red = (c0 << 1 >> 10) + (c1 >> 10);
    return red / 3 * 1024 + green / 3 * 32 + blue / 3;
}
