
static int weight(int i, int blen, int offset)
{
    int result;
    if (i < 2 * offset) {
        if (offset == 1) {
            result = (i) ? 5 : 3;
        } else {
            result = 1 + (6 * i + offset - 1) / (2 * offset - 1);
        }
    } else if (i > blen - 1 - 2 * offset) {
        if (offset == 1) {
            result = (blen - 1 - i) ? 5 : 3;
        } else {
            result = 1 + (6 * (blen - 1 - i) + offset - 1) / (2 * offset - 1);
        }
    } else {
        result = 8;
    }
    return result;
}

static int weight(int i, int blen, int offset)
{
    if (offset == 1) {
        if (i < 2 * offset) {
            return (i != 0) ? 5 : 3;
        } else if (i > blen - 1 - 2 * offset) {
            return (blen - 1 - i != 0) ? 5 : 3;
        } else {
            return 8;
        }
    } else {
        if (i < 2 * offset) {
            return 1 + (6 * i + offset - 1) / (2 * offset - 1);
        } else if (i > blen - 1 - 2 * offset) {
            return 1 + (6 * (blen - 1 - i) + offset - 1) / (2 * offset - 1);
        } else {
            return 8;
        }
    }
}

static int weight(int i, int blen, int offset)
{
    int result;
    if (i < 2 * offset) {
        result = offset == 1 ? (i ? 5 : 3) : (1 + (6 * i + offset - 1) / (2 * offset - 1));
    } else if (i > blen - 1 - 2 * offset) {
        result = offset == 1 ? ((blen - 1 - i) ? 5 : 3) : (1 + (6 * (blen - 1 - i) + offset - 1) / (2 * offset - 1));
    } else {
        result = 8;
    }
    return result;
}

static int weight(int i, int blen, int offset)
{
    if (offset == 1) {
        return (i < 2 * offset) ? ((i) ? 5 : 3) : ((i > blen - 1 - 2 * offset) ? ((blen - 1 - i) ? 5 : 3) : 8);
    } else {
        return (i < 2 * offset) ? (1 + (6 * i + offset - 1) / (2 * offset - 1)) : ((i > blen - 1 - 2 * offset) ? (1 + (6 * (blen - 1 - i) + offset - 1) / (2 * offset - 1)) : 8);
    }
}

static int weight(int i, int blen, int offset)
{
    int ret = 8;
    if (i < 2 * offset) {
        ret = (offset == 1) ? (i ? 5 : 3) : 1 + (6 * i + offset - 1) / (2 * offset - 1);
    } else if (i > blen - 1 - 2 * offset) {
        ret = (offset == 1) ? ((blen - 1 - i) ? 5 : 3) : 1 + (6 * (blen - 1 - i) + offset - 1) / (2 * offset - 1);
    }
    return ret;
}

static int weight(int i, int blen, int offset)
{
    if (i < 2 * offset) {
        return (offset == 1) ? (i ? 5 : 3) : 1 + (6 * i + offset - 1) / (2 * offset - 1);
    }
    if (i > blen - 1 - 2 * offset) {
        return (offset == 1) ? ((blen - 1 - i) ? 5 : 3) : 1 + (6 * (blen - 1 - i) + offset - 1) / (2 * offset - 1);
    }
    return 8;
}

static int weight(int i, int blen, int offset)
{
    int result;
    if (i < 2 * offset) {
        if (offset == 1) {
            result = (i != 0) ? 5 : 3;
        } else {
            result = 1 + (6 * i + offset - 1) / (2 * offset - 1);
        }
    } else if (i > blen - 1 - 2 * offset) {
        if (offset == 1) {
            result = (blen - 1 - i != 0) ? 5 : 3;
        } else {
            result = 1 + (6 * (blen - 1 - i) + offset - 1) / (2 * offset - 1);
        }
    } else {
        result = 8;
    }
    return result;
}

static int weight(int i, int blen, int offset)
{
    if (i < 2 * offset) {
        if (offset == 1) {
            return (i ? 5 : 3);
        } else {
            return 1 + (6 * i + offset - 1) / (2 * offset - 1);
        }
    } else if (i > blen - 1 - 2 * offset) {
        if (offset == 1) {
            return ((blen - 1 - i) ? 5 : 3);
        } else {
            return 1 + (6 * (blen - 1 - i) + offset - 1) / (2 * offset - 1);
        }
    }
    return 8;
}

static int weight(int i, int blen, int offset)
{
    if (i < 2 * offset) {
        return (offset == 1) ? ((i) ? 5 : 3) : (1 + (6 * i + offset - 1) / (2 * offset - 1));
    } else if (i > blen - 1 - 2 * offset) {
        return (offset == 1) ? ((blen - 1 - i) ? 5 : 3) : (1 + (6 * (blen - 1 - i) + offset - 1) / (2 * offset - 1));
    }
    return 8;
}

static int weight(int i, int blen, int offset)
{
    if (i < 2 * offset) {
        if (offset == 1) {
            return ((i) ? 5 : 3);
        } else {
            return (1 + (6 * i + offset - 1) / (2 * offset - 1));
        }
    } else if (i > blen - 1 - 2 * offset) {
        if (offset == 1) {
            return ((blen - 1 - i) ? 5 : 3);
        } else {
            return (1 + (6 * (blen - 1 - i) + offset - 1) / (2 * offset - 1));
        }
    }
    return 8;
}
