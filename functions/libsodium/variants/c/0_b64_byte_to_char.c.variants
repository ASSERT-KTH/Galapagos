
static int b64_byte_to_char(unsigned int x)
{
    if (x < 26)
        return x + 'A';
    if (x < 52)
        return x - 26 + 'a';
    if (x < 62)
        return x - 52 + '0';
    if (x == 62)
        return '+';
    return '/';
}

static int b64_byte_to_char(unsigned int x)
{
    return x < 26 ? x + 'A' : (x < 52 ? x - 26 + 'a' : (x < 62 ? x - 52 + '0' : (x == 62 ? '+' : '/')));
}

static int b64_byte_to_char(unsigned int x)
{
    return ((x < 26) * (x + 'A')) |
           ((x >= 26 && x < 52) * (x - 26 + 'a')) |
           ((x >= 52 && x < 62) * (x - 52 + '0')) |
           ((x == 62) * '+') |
           ((x == 63) * '/');
}

static int b64_byte_to_char(unsigned int x)
{
    switch (x) {
        case 62: return '+';
        case 63: return '/';
        default: return x < 26 ? x + 'A' :
                       (x < 52 ? x - 26 + 'a' :
                                x - 52 + '0');
    }
}

static int b64_byte_to_char(unsigned int x)
{
    switch (x) {
        case 62: return '+';
        case 63: return '/';
        default: return x + (x < 26 ? 'A' : (x < 52 ? 'a' - 26 : '0' - 52));
    }
}

static int b64_byte_to_char(unsigned int x)
{
    if (x == 62) return '+';
    if (x == 63) return '/';
    return x < 26 ? x + 'A' : (x < 52 ? x - 26 + 'a' : x - 52 + '0');
}

static int b64_byte_to_char(unsigned int x)
{
    if (x >= 0 && x < 26)
        return x + 'A';
    if (x >= 26 && x < 52)
        return x - 26 + 'a';
    if (x >= 52 && x < 62)
        return x - 52 + '0';
    return x == 62 ? '+' : '/';
}

static int b64_byte_to_char(unsigned int x)
{
    char table[] = 
        "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
        "abcdefghijklmnopqrstuvwxyz"
        "0123456789+/";
    return table[x];
}

static int b64_byte_to_char(unsigned int x)
{
    return ((x < 26) ? x + 65 :
            (x < 52) ? x + 71 :
            (x < 62) ? x - 4 :
            (x == 62) ? 43 : 47);
}

static int b64_byte_to_char(unsigned int x)
{
    char lookup[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    return lookup[x];
}
