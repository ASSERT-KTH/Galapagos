
static unsigned int b64_urlsafe_char_to_byte(int c)
{
    if (c >= 'A' && c <= 'Z')
        return c - 'A';
    if (c >= 'a' && c <= 'z')
        return c - 'a' + 26;
    if (c >= '0' && c <= '9')
        return c - '0' + 52;
    if (c == '-')
        return 62;
    if (c == '_')
        return 63;
    return 0;
}

static unsigned int b64_urlsafe_char_to_byte(int c)
{
    return (c >= 'A' && c <= 'Z') ? c - 'A' :
           (c >= 'a' && c <= 'z') ? c - 'a' + 26 :
           (c >= '0' && c <= '9') ? c - '0' + 52 :
           c == '-' ? 62 :
           c == '_' ? 63 : 0;
}

static unsigned int b64_urlsafe_char_to_byte(int c)
{
    switch (c) {
        case 'A' ... 'Z': return c - 'A';
        case 'a' ... 'z': return c - 'a' + 26;
        case '0' ... '9': return c - '0' + 52;
        case '-': return 62;
        case '_': return 63;
        default: return 0;
    }
}

static unsigned int b64_urlsafe_char_to_byte(int c)
{
    if ('A' <= c && c <= 'Z')
        return c - 65;
    if ('a' <= c && c <= 'z')
        return c - 71;
    if ('0' <= c && c <= '9')
        return c + 4;
    if (c == '-')
        return 62;
    if (c == '_')
        return 63;
    return 0;
}

static unsigned int b64_urlsafe_char_to_byte(int c)
{
    if (('A' <= c) && (c <= 'Z'))
        return c - 'A';
    if (('a' <= c) && (c <= 'z'))
        return c - 'a' + 26;
    if (('0' <= c) && (c <= '9'))
        return c - '0' + 52;
    if (c == '-')
        return 62;
    return (c == '_') ? 63 : 0;
}

static unsigned int b64_urlsafe_char_to_byte(int c)
{
    if ((c >= 'A') && (c <= 'Z'))
        return (unsigned int)(c - 'A');
    if ((c >= 'a') && (c <= 'z'))
        return (unsigned int)(c - 'a') + 26;
    if ((c >= '0') && (c <= '9'))
        return (unsigned int)(c - '0') + 52;
    if (c == '-')
        return 62;
    if (c == '_')
        return 63;
    return 0;
}

static unsigned int b64_urlsafe_char_to_byte(int c)
{
    if (c >= 'A' && c <= 'Z')
        return (unsigned int)c - (unsigned int)'A';
    if (c >= 'a' && c <= 'z')
        return (unsigned int)c - (unsigned int)'a' + 26U;
    if (c >= '0' && c <= '9')
        return (unsigned int)c - (unsigned int)'0' + 52U;
    if (c == '-')
        return 62U;
    if (c == '_')
        return 63U;
    return 0U;
}

static unsigned int b64_urlsafe_char_to_byte(int c)
{
    unsigned int x = 0;
    if (c >= 'A' && c <= 'Z')
        x = c - 'A';
    else if (c >= 'a' && c <= 'z')
        x = c - 'a' + 26;
    else if (c >= '0' && c <= '9')
        x = c - '0' + 52;
    else if (c == '-')
        x = 62;
    else if (c == '_')
        x = 63;
    return x;
}

static unsigned int b64_urlsafe_char_to_byte(int c)
{
    if (c >= 65 && c <= 90)
        return c - 65;
    if (c >= 97 && c <= 122)
        return c - 71;
    if (c >= 48 && c <= 57)
        return c + 4;
    if (c == '-')
        return 62;
    if (c == '_')
        return 63;
    return 0;
}

static unsigned int b64_urlsafe_char_to_byte(int c)
{
    if (c == '+') return 62;
    if (c == '/') return 63;
    if (c >= 'A' && c <= 'Z') return (unsigned int)(c - 'A');
    if (c >= 'a' && c <= 'z') return (unsigned int)(c - 'a' + 26);
    if (c >= '0' && c <= '9') return (unsigned int)(c - '0' + 52);
    if (c == '-') return 62;
    if (c == '_') return 63;
    return 0;
}
