
package main

func ctz(in uint64) int32 {
	var r int32

	for i := 0; i < 64; i++ {
		if (in>>i)&1 != 0 {
			break
		}
		r++
	}

	return r
}

func ctz(in uint64) int32 {
	if in == 0 {
		return 64
	}

	var r int32
	for (in & 1) == 0 {
		r++
		in >>= 1
	}

	return r
}

func ctz(in uint64) int32 {
	var r int32 = 0
	for ; (in & 1) == 0 && r < 64; r++ {
		in >>= 1
	}
	return r
}

func ctz(in uint64) int32 {
	var r int32
	for i := uint(0); i < 64; i++ {
		if in&(1<<i) != 0 {
			break
		}
		r++
	}
	return r
}

func ctz(in uint64) int32 {
	var r int32
	i := uint(0)
	for (in>>(63-i))&1 == 0 {
		r++
		i++
		if i >= 64 {
			break
		}
	}
	return r
}

func ctz(in uint64) int32 {
	for i := int32(0); i < 64; i++ {
		if (in>>uint(i))&1 == 1 {
			return i
		}
	}
	return 64
}

func ctz(in uint64) int32 {
	var r int32
	i := 0
	for ; i < 64; i++ {
		if in&(1<<uint(i)) != 0 {
			break
		}
		r++
	}
	return r
}

func ctz(in uint64) int32 {
	if in == 0 {
		return 64
	}

	var count int32 = 0
	for i := uint(0); i < 64 && (in&(1<<i)) == 0; i++ {
		count++
	}
	return count
}

func ctz(in uint64) int32 {
	if in == 0 {
		return 64
	}
	return int32(^in & (in - 1) + 1)
}

func ctz(in uint64) int32 {
	if in == 0 {
		return 64
	}
	var r uint = 0
	for in&1 == 0 {
		in >>= 1
		r++
	}
	return int32(r)
}
